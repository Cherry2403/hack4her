context:
  date: '2024-12-02'
  env_spec: /mnt/llmd/data/gontiern/catalog_items/for_open_release/train/FlyCorp
metadata:
  author: user_simulator
  author_tape_id: 77a1404a-a7ff-4167-9dde-91f7c74aedfb
  error: null
  id: 8a633ced-6602-4572-a78c-eb05c620b869
  last_agent_tape_id: 861a136a-1f8e-4eff-a5b8-cd7be25cf3bf
  n_added_steps: 1
  other: {}
  parent_id: 861a136a-1f8e-4eff-a5b8-cd7be25cf3bf
  result: {}
  user_behavior: test_behavior
  user_secondary_behavior: default_instruction
steps:
- content: Hi, how can I help you?
  kind: assistant
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
- content: I need to check in for my flight to Paris scheduled for this afternoon.
  kind: user
  metadata:
    agent: ''
    id: df874f09-3f3e-4199-9dd3-51fe35de2760
    node: ''
    other:
      alias: init_message_short
    prompt_id: ''
- kind: resolve_function_action
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: routing_node
    other: {}
    prompt_id: 22b86d2a-223c-4dcf-85b1-bda48ee3c0ba
  query: I need to check in for my flight to Paris scheduled for this afternoon.
- candidates:
  - function: AddAncillaryService
    short_description: Request to add an ancillary service to a flight booking, including
      service type and payment details. This function requires the flight booking
      ID, service type (either 'baggage' or'meal'), and payment method (either 'credit
      card' or 'cash'). According to FlyCorp's policy, only one ancillary service
      can be added per flight booking. If the service is successfully added, the function
      returns a request ID, the status of the request ('pending', 'approved', or'rejected'),
      and a list of the updated services associated with the flight booking. If the
      service is already added, the function returns an error message.
  - function: BookFlight
    short_description: Request to book a flight for a passenger, including flight
      details, passenger information, and payment details. This function requires
      the passenger's first and last name, email address, phone number, and payment
      method. The flight details include the departure and arrival airports, departure
      date, and class of service. According to FlyCorp's policies, passengers must
      be at least 18 years old to book a flight, and payment must be made using a
      valid credit card. The function returns a request ID, the status of the request
      (either 'pending', 'approved', or'rejected'), and a list of flight details.
  - function: CheckIn
    short_description: Request to check-in a passenger for a flight, including seat
      selection and baggage information. This function requires the passenger's booking
      reference, flight number, and last name as mandatory parameters. Optionally,
      the passenger can provide their preferred seat and baggage details. According
      to FlyCorp's check-in policy, online check-in is available 24 hours prior to
      the scheduled flight departure time. FlyCorp's baggage policy allows each passenger
      to check-in up to two bags, with a maximum weight of 23kg each. The function
      returns a unique request ID, the status of the check-in request (either'success'
      or 'failed'), and a list of checked-in baggage items.
  - function: ReportLostLuggage
    short_description: 'Request to report lost luggage, including flight details,
      luggage description, and contact information. This function requires the passenger''s
      name, flight number, departure date, luggage type, and contact email. The luggage
      type must be one of the following: suitcase, backpack, handbag, or other. The
      function will return a request ID, the status of the request (either ''pending'',
      ''in_progress'', or''resolved''), and a comment from the FlyCorp customer service
      team. According to FlyCorp''s policy, all lost luggage reports must be submitted
      within 24 hours of flight arrival. FlyCorp is not responsible for lost luggage
      that is not reported within this timeframe.'
  - function: RequestFlightChange
    short_description: Request to change a flight, including original flight details
      (original flight number, departure date, and departure time), new flight details
      (new flight number, new departure date, and new departure time), and reason
      for change. This request is subject to FlyCorp's flight change policy, which
      allows changes up to 24 hours prior to the original flight's scheduled departure
      time. The request will be processed based on availability and may incur additional
      fees. The response will include a unique request ID, the status of the request
      (approved, denied, or pending), and a list of updated flight segments.
  - function: RequestRefund
    short_description: 'Request for a refund for a cancelled or changed flight, including
      flight details and reason for refund. This function requires the flight number,
      original booking date, and reason for refund as mandatory parameters. The reason
      for refund must be one of the following: ''flight cancellation'',''schedule
      change'', or ''voluntary change''. FlyCorp''s refund policy states that refunds
      will be processed within 7-10 business days. The function returns a unique request
      ID, the status of the request (either ''pending'', ''approved'', or''rejected''),
      and a list of comments from the FlyCorp customer service team.'
  - function: RequestSpecialMeal
    short_description: Request for a special meal option for a passenger, including
      meal type and dietary restrictions. This function requires the passenger's booking
      reference, meal type (vegetarian, gluten-free, etc.), and dietary restrictions
      (halal, kosher, etc.). According to FlyCorp's policy, special meal requests
      must be made at least 24 hours prior to flight departure. The function will
      return a request ID, the status of the request (approved, denied, or pending),
      and a comment indicating any additional information or requirements.
  - function: RequestWheelchairAssistance
    short_description: Request for wheelchair assistance for a passenger, including
      flight details and special requirements. This function requires the passenger's
      name, flight number, and departure date as mandatory parameters. Additionally,
      it accepts optional parameters for special requirements such as escort assistance
      or Braille signage. According to FlyCorp's policy, wheelchair assistance requests
      must be made at least 48 hours prior to the scheduled flight departure time.
      The function returns a unique request ID, the status of the request (either
      'pending', 'approved', or 'denied'), and a list of assigned assistants.
  - function: UpdatePassengerInformation
    short_description: Request to update a passenger's personal information, including
      name, contact details, and loyalty program information. This function requires
      the passenger's ID, new name, email address, and phone number as mandatory parameters.
      The loyalty program information is optional. According to FlyCorp's policy,
      passengers can only update their own information, and the new email address
      must not be already in use by another passenger. The function returns a request
      ID, the status of the request (either'success' or 'failed'), and a list of updated
      loyalty programs.
  - function: UpdateSeatAssignment
    short_description: Request to update a passenger's seat assignment on a flight,
      including seat number and class of service. This function requires the passenger's
      booking reference, flight number, and new seat assignment details. According
      to FlyCorp's policies, seat assignments can only be updated up to 24 hours prior
      to the scheduled flight departure time. Additionally, FlyCorp's rules dictate
      that passengers in Basic Economy class are not eligible for seat selection.
      The function returns a request ID, the status of the request (either'success'
      or 'failed'), and a list of available seats on the flight.
  kind: function_candidates
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
- function: CheckIn
  kind: inspect_function_action
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: intent_discovery_node
    other: {}
    prompt_id: a03f191a-83a8-4662-a777-fbc026cf7014
- description: Request to check-in a passenger for a flight, including seat selection
    and baggage information. This function requires the passenger's booking reference,
    flight number, and last name as mandatory parameters. Optionally, the passenger
    can provide their preferred seat and baggage details. According to FlyCorp's check-in
    policy, online check-in is available 24 hours prior to the scheduled flight departure
    time. FlyCorp's baggage policy allows each passenger to check-in up to two bags,
    with a maximum weight of 23kg each. The function returns a unique request ID,
    the status of the check-in request (either'success' or 'failed'), and a list of
    checked-in baggage items.
  kind: function_schema
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
  name: CheckIn
  parameters:
    properties:
      baggage_details:
        description: The passenger's baggage details (optional).
        type: string
      booking_reference:
        description: The passenger's booking reference.
        type: string
      flight_number:
        description: The flight number.
        type: string
      last_name:
        description: The passenger's last name.
        type: string
      preferred_seat:
        description: The passenger's preferred seat (optional).
        type: string
    required:
    - booking_reference
    - flight_number
    - last_name
    type: object
  return_value:
    properties:
      checked_baggage:
        description: A list of checked-in baggage items.
        items:
          properties:
            bag_id:
              type: string
            weight:
              type: number
          type: object
        type: array
      request_id:
        description: A unique ID for the check-in request.
        type: string
      status:
        description: The status of the check-in request.
        enum:
        - success
        - failed
        type: string
    required:
    - request_id
    - status
    - checked_baggage
    type: object
- function: CheckIn
  kind: gather_values_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: gather_values_node
    other: {}
    prompt_id: 27a23677-1f5e-406c-ab48-673dda462679
  parameters: {}
- function: CheckIn
  kind: verify_values_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: verify_values_node
    other: {}
    prompt_id: cdec3cc1-2ae5-406c-a7b6-d2fda75ba256
  parameters: {}
- assign: {}
  function: CheckIn
  kind: update_function_parameters_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: retrospective_plan_node
    other: {}
    prompt_id: 2f591a76-ae89-45cd-969e-fe211bf67980
  skip: []
- function: CheckIn
  kind: request_function_parameters_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: forward_plan_node
    other: {}
    prompt_id: cda9b387-f17b-46f8-9173-59765da35c9a
  parameters:
  - booking_reference
- content: Please enter your booking reference for your flight to Paris this afternoon.
  kind: assistant
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: generation_node
    other: {}
    prompt_id: 39551a26-d774-4de0-8b7a-08bd68b82188
- kind: set_next_node
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: generation_node
    other: {}
    prompt_id: 39551a26-d774-4de0-8b7a-08bd68b82188
  next_node: routing_node
- content: VH7K2L9
  kind: user
  metadata:
    agent: ''
    id: ce658bbc-29d1-4e4d-9303-e35aa8048754
    node: ''
    other:
      alias: test_behavior
    prompt_id: ''
---
context:
  date: '2024-12-02'
  env_spec: /mnt/llmd/data/gontiern/catalog_items/for_open_release/train/FlyCorp
metadata:
  author: user_simulator
  author_tape_id: 9bb9eb58-c843-4ec1-8a6a-63998d489b97
  error: null
  id: 88f6ae74-b167-4be6-b795-5cc75f4eee2c
  last_agent_tape_id: b7b3f1f6-99f1-4a82-827f-3120e410ebf2
  n_added_steps: 1
  other: {}
  parent_id: b7b3f1f6-99f1-4a82-827f-3120e410ebf2
  result: {}
  user_behavior: test_behavior
  user_secondary_behavior: default_instruction
steps:
- content: Hi, how can I help you?
  kind: assistant
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
- content: I want to update the seat assignment for my flight this afternoon.
  kind: user
  metadata:
    agent: ''
    id: 367c114e-8a96-43ed-a064-3a643b946162
    node: ''
    other:
      alias: init_message_short
    prompt_id: ''
- kind: resolve_function_action
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: routing_node
    other: {}
    prompt_id: 41765132-1127-4f85-8151-c95cfac7f6cf
  query: I want to update the seat assignment for my flight this afternoon.
- candidates:
  - function: AddAncillaryService
    short_description: Request to add an ancillary service to a flight booking, including
      service type and payment details. This function requires the flight booking
      ID, service type (either 'baggage' or'meal'), and payment method (either 'credit
      card' or 'cash'). According to FlyCorp's policy, only one ancillary service
      can be added per flight booking. If the service is successfully added, the function
      returns a request ID, the status of the request ('pending', 'approved', or'rejected'),
      and a list of the updated services associated with the flight booking. If the
      service is already added, the function returns an error message.
  - function: BookFlight
    short_description: Request to book a flight for a passenger, including flight
      details, passenger information, and payment details. This function requires
      the passenger's first and last name, email address, phone number, and payment
      method. The flight details include the departure and arrival airports, departure
      date, and class of service. According to FlyCorp's policies, passengers must
      be at least 18 years old to book a flight, and payment must be made using a
      valid credit card. The function returns a request ID, the status of the request
      (either 'pending', 'approved', or'rejected'), and a list of flight details.
  - function: CheckIn
    short_description: Request to check-in a passenger for a flight, including seat
      selection and baggage information. This function requires the passenger's booking
      reference, flight number, and last name as mandatory parameters. Optionally,
      the passenger can provide their preferred seat and baggage details. According
      to FlyCorp's check-in policy, online check-in is available 24 hours prior to
      the scheduled flight departure time. FlyCorp's baggage policy allows each passenger
      to check-in up to two bags, with a maximum weight of 23kg each. The function
      returns a unique request ID, the status of the check-in request (either'success'
      or 'failed'), and a list of checked-in baggage items.
  - function: ReportLostLuggage
    short_description: 'Request to report lost luggage, including flight details,
      luggage description, and contact information. This function requires the passenger''s
      name, flight number, departure date, luggage type, and contact email. The luggage
      type must be one of the following: suitcase, backpack, handbag, or other. The
      function will return a request ID, the status of the request (either ''pending'',
      ''in_progress'', or''resolved''), and a comment from the FlyCorp customer service
      team. According to FlyCorp''s policy, all lost luggage reports must be submitted
      within 24 hours of flight arrival. FlyCorp is not responsible for lost luggage
      that is not reported within this timeframe.'
  - function: RequestFlightChange
    short_description: Request to change a flight, including original flight details
      (original flight number, departure date, and departure time), new flight details
      (new flight number, new departure date, and new departure time), and reason
      for change. This request is subject to FlyCorp's flight change policy, which
      allows changes up to 24 hours prior to the original flight's scheduled departure
      time. The request will be processed based on availability and may incur additional
      fees. The response will include a unique request ID, the status of the request
      (approved, denied, or pending), and a list of updated flight segments.
  - function: RequestRefund
    short_description: 'Request for a refund for a cancelled or changed flight, including
      flight details and reason for refund. This function requires the flight number,
      original booking date, and reason for refund as mandatory parameters. The reason
      for refund must be one of the following: ''flight cancellation'',''schedule
      change'', or ''voluntary change''. FlyCorp''s refund policy states that refunds
      will be processed within 7-10 business days. The function returns a unique request
      ID, the status of the request (either ''pending'', ''approved'', or''rejected''),
      and a list of comments from the FlyCorp customer service team.'
  - function: RequestSpecialMeal
    short_description: Request for a special meal option for a passenger, including
      meal type and dietary restrictions. This function requires the passenger's booking
      reference, meal type (vegetarian, gluten-free, etc.), and dietary restrictions
      (halal, kosher, etc.). According to FlyCorp's policy, special meal requests
      must be made at least 24 hours prior to flight departure. The function will
      return a request ID, the status of the request (approved, denied, or pending),
      and a comment indicating any additional information or requirements.
  - function: RequestWheelchairAssistance
    short_description: Request for wheelchair assistance for a passenger, including
      flight details and special requirements. This function requires the passenger's
      name, flight number, and departure date as mandatory parameters. Additionally,
      it accepts optional parameters for special requirements such as escort assistance
      or Braille signage. According to FlyCorp's policy, wheelchair assistance requests
      must be made at least 48 hours prior to the scheduled flight departure time.
      The function returns a unique request ID, the status of the request (either
      'pending', 'approved', or 'denied'), and a list of assigned assistants.
  - function: UpdatePassengerInformation
    short_description: Request to update a passenger's personal information, including
      name, contact details, and loyalty program information. This function requires
      the passenger's ID, new name, email address, and phone number as mandatory parameters.
      The loyalty program information is optional. According to FlyCorp's policy,
      passengers can only update their own information, and the new email address
      must not be already in use by another passenger. The function returns a request
      ID, the status of the request (either'success' or 'failed'), and a list of updated
      loyalty programs.
  - function: UpdateSeatAssignment
    short_description: Request to update a passenger's seat assignment on a flight,
      including seat number and class of service. This function requires the passenger's
      booking reference, flight number, and new seat assignment details. According
      to FlyCorp's policies, seat assignments can only be updated up to 24 hours prior
      to the scheduled flight departure time. Additionally, FlyCorp's rules dictate
      that passengers in Basic Economy class are not eligible for seat selection.
      The function returns a request ID, the status of the request (either'success'
      or 'failed'), and a list of available seats on the flight.
  kind: function_candidates
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
- function: UpdateSeatAssignment
  kind: inspect_function_action
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: intent_discovery_node
    other: {}
    prompt_id: c32e2b23-3441-4aa3-8fff-9c699cc95a39
- description: Request to update a passenger's seat assignment on a flight, including
    seat number and class of service. This function requires the passenger's booking
    reference, flight number, and new seat assignment details. According to FlyCorp's
    policies, seat assignments can only be updated up to 24 hours prior to the scheduled
    flight departure time. Additionally, FlyCorp's rules dictate that passengers in
    Basic Economy class are not eligible for seat selection. The function returns
    a request ID, the status of the request (either'success' or 'failed'), and a list
    of available seats on the flight.
  kind: function_schema
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
  name: UpdateSeatAssignment
  parameters:
    properties:
      booking_reference:
        description: The passenger's booking reference number.
        type: string
      current_class_of_service:
        description: The current class of service of the passenger (optional, but
          required if new_class_of_service is provided).
        enum:
        - Main Cabin
        - Comfort+
        - Premium Select
        - Delta One
        - Basic Economy
        type: string
      flight_number:
        description: The flight number for which the seat assignment needs to be updated.
        type: string
      new_class_of_service:
        description: The new class of service for the passenger (e.g. Main Cabin,
          Comfort+, etc.).
        enum:
        - Main Cabin
        - Comfort+
        - Premium Select
        - Delta One
        type: string
      new_seat_number:
        description: The new seat number to be assigned to the passenger.
        type: string
    required:
    - booking_reference
    - flight_number
    - new_seat_number
    type: object
  return_value:
    properties:
      available_seats:
        description: A list of available seats on the flight.
        items:
          type: string
        type: array
      request_id:
        description: The unique ID of the request.
        type: string
      status:
        description: The status of the request (either'success' or 'failed').
        enum:
        - success
        - failed
        type: string
    required:
    - request_id
    - status
    - available_seats
    type: object
- function: UpdateSeatAssignment
  kind: gather_values_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: gather_values_node
    other: {}
    prompt_id: 03ee593c-4470-4b76-a2ab-875ef2482a8a
  parameters: {}
- function: UpdateSeatAssignment
  kind: verify_values_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: verify_values_node
    other: {}
    prompt_id: 11051d40-dcc2-4b8d-97fe-04a92b6f68c1
  parameters: {}
- assign: {}
  function: UpdateSeatAssignment
  kind: update_function_parameters_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: retrospective_plan_node
    other: {}
    prompt_id: 7ff04310-a37f-4837-8f9d-e86005566c75
  skip: []
- function: UpdateSeatAssignment
  kind: request_function_parameters_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: forward_plan_node
    other: {}
    prompt_id: 1d7e5a9a-4bb2-4b3e-a80e-78d4087fd6f4
  parameters:
  - booking_reference
- content: To update your seat assignment, please provide your booking reference number.
  kind: assistant
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: generation_node
    other: {}
    prompt_id: f4c759d4-f211-4399-b95f-4f240d104680
- kind: set_next_node
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: generation_node
    other: {}
    prompt_id: f4c759d4-f211-4399-b95f-4f240d104680
  next_node: routing_node
- content: My booking reference number is GK7H3J.
  kind: user
  metadata:
    agent: ''
    id: 36269611-fe75-4329-8b96-24e029e71a7c
    node: ''
    other:
      alias: test_behavior
    prompt_id: ''
---
context:
  date: '2024-12-02'
  env_spec: /mnt/llmd/data/gontiern/catalog_items/for_open_release/train/FlyCorp
metadata:
  author: user_simulator
  author_tape_id: 468bc9d2-9df2-44ef-8ba7-ff5283f4ed9d
  error: null
  id: 073a6323-888a-4ac2-9d00-3bc069028cd6
  last_agent_tape_id: ddfe9da2-34b6-4f71-92c4-623623ce7581
  n_added_steps: 1
  other: {}
  parent_id: ddfe9da2-34b6-4f71-92c4-623623ce7581
  result: {}
  user_behavior: test_behavior
  user_secondary_behavior: default_instruction
steps:
- content: Hi, how can I help you?
  kind: assistant
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
- content: I want to check in for my flight to Tokyo that's scheduled to depart in
    a few hours.
  kind: user
  metadata:
    agent: ''
    id: a04c3f98-7ecb-4062-993e-5b75e43bf966
    node: ''
    other:
      alias: init_message_short
    prompt_id: ''
- kind: resolve_function_action
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: routing_node
    other: {}
    prompt_id: 6e9d10ce-1839-4082-8b1a-17cafec02d91
  query: I want to check in for my flight to Tokyo that's scheduled to depart in a
    few hours.
- candidates:
  - function: AddAncillaryService
    short_description: Request to add an ancillary service to a flight booking, including
      service type and payment details. This function requires the flight booking
      ID, service type (either 'baggage' or'meal'), and payment method (either 'credit
      card' or 'cash'). According to FlyCorp's policy, only one ancillary service
      can be added per flight booking. If the service is successfully added, the function
      returns a request ID, the status of the request ('pending', 'approved', or'rejected'),
      and a list of the updated services associated with the flight booking. If the
      service is already added, the function returns an error message.
  - function: BookFlight
    short_description: Request to book a flight for a passenger, including flight
      details, passenger information, and payment details. This function requires
      the passenger's first and last name, email address, phone number, and payment
      method. The flight details include the departure and arrival airports, departure
      date, and class of service. According to FlyCorp's policies, passengers must
      be at least 18 years old to book a flight, and payment must be made using a
      valid credit card. The function returns a request ID, the status of the request
      (either 'pending', 'approved', or'rejected'), and a list of flight details.
  - function: CheckIn
    short_description: Request to check-in a passenger for a flight, including seat
      selection and baggage information. This function requires the passenger's booking
      reference, flight number, and last name as mandatory parameters. Optionally,
      the passenger can provide their preferred seat and baggage details. According
      to FlyCorp's check-in policy, online check-in is available 24 hours prior to
      the scheduled flight departure time. FlyCorp's baggage policy allows each passenger
      to check-in up to two bags, with a maximum weight of 23kg each. The function
      returns a unique request ID, the status of the check-in request (either'success'
      or 'failed'), and a list of checked-in baggage items.
  - function: ReportLostLuggage
    short_description: 'Request to report lost luggage, including flight details,
      luggage description, and contact information. This function requires the passenger''s
      name, flight number, departure date, luggage type, and contact email. The luggage
      type must be one of the following: suitcase, backpack, handbag, or other. The
      function will return a request ID, the status of the request (either ''pending'',
      ''in_progress'', or''resolved''), and a comment from the FlyCorp customer service
      team. According to FlyCorp''s policy, all lost luggage reports must be submitted
      within 24 hours of flight arrival. FlyCorp is not responsible for lost luggage
      that is not reported within this timeframe.'
  - function: RequestFlightChange
    short_description: Request to change a flight, including original flight details
      (original flight number, departure date, and departure time), new flight details
      (new flight number, new departure date, and new departure time), and reason
      for change. This request is subject to FlyCorp's flight change policy, which
      allows changes up to 24 hours prior to the original flight's scheduled departure
      time. The request will be processed based on availability and may incur additional
      fees. The response will include a unique request ID, the status of the request
      (approved, denied, or pending), and a list of updated flight segments.
  - function: RequestRefund
    short_description: 'Request for a refund for a cancelled or changed flight, including
      flight details and reason for refund. This function requires the flight number,
      original booking date, and reason for refund as mandatory parameters. The reason
      for refund must be one of the following: ''flight cancellation'',''schedule
      change'', or ''voluntary change''. FlyCorp''s refund policy states that refunds
      will be processed within 7-10 business days. The function returns a unique request
      ID, the status of the request (either ''pending'', ''approved'', or''rejected''),
      and a list of comments from the FlyCorp customer service team.'
  - function: RequestSpecialMeal
    short_description: Request for a special meal option for a passenger, including
      meal type and dietary restrictions. This function requires the passenger's booking
      reference, meal type (vegetarian, gluten-free, etc.), and dietary restrictions
      (halal, kosher, etc.). According to FlyCorp's policy, special meal requests
      must be made at least 24 hours prior to flight departure. The function will
      return a request ID, the status of the request (approved, denied, or pending),
      and a comment indicating any additional information or requirements.
  - function: RequestWheelchairAssistance
    short_description: Request for wheelchair assistance for a passenger, including
      flight details and special requirements. This function requires the passenger's
      name, flight number, and departure date as mandatory parameters. Additionally,
      it accepts optional parameters for special requirements such as escort assistance
      or Braille signage. According to FlyCorp's policy, wheelchair assistance requests
      must be made at least 48 hours prior to the scheduled flight departure time.
      The function returns a unique request ID, the status of the request (either
      'pending', 'approved', or 'denied'), and a list of assigned assistants.
  - function: UpdatePassengerInformation
    short_description: Request to update a passenger's personal information, including
      name, contact details, and loyalty program information. This function requires
      the passenger's ID, new name, email address, and phone number as mandatory parameters.
      The loyalty program information is optional. According to FlyCorp's policy,
      passengers can only update their own information, and the new email address
      must not be already in use by another passenger. The function returns a request
      ID, the status of the request (either'success' or 'failed'), and a list of updated
      loyalty programs.
  - function: UpdateSeatAssignment
    short_description: Request to update a passenger's seat assignment on a flight,
      including seat number and class of service. This function requires the passenger's
      booking reference, flight number, and new seat assignment details. According
      to FlyCorp's policies, seat assignments can only be updated up to 24 hours prior
      to the scheduled flight departure time. Additionally, FlyCorp's rules dictate
      that passengers in Basic Economy class are not eligible for seat selection.
      The function returns a request ID, the status of the request (either'success'
      or 'failed'), and a list of available seats on the flight.
  kind: function_candidates
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
- function: CheckIn
  kind: inspect_function_action
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: intent_discovery_node
    other: {}
    prompt_id: 76ab1194-5573-4fc9-98ca-e688dc970a53
- description: Request to check-in a passenger for a flight, including seat selection
    and baggage information. This function requires the passenger's booking reference,
    flight number, and last name as mandatory parameters. Optionally, the passenger
    can provide their preferred seat and baggage details. According to FlyCorp's check-in
    policy, online check-in is available 24 hours prior to the scheduled flight departure
    time. FlyCorp's baggage policy allows each passenger to check-in up to two bags,
    with a maximum weight of 23kg each. The function returns a unique request ID,
    the status of the check-in request (either'success' or 'failed'), and a list of
    checked-in baggage items.
  kind: function_schema
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
  name: CheckIn
  parameters:
    properties:
      baggage_details:
        description: The passenger's baggage details (optional).
        type: string
      booking_reference:
        description: The passenger's booking reference.
        type: string
      flight_number:
        description: The flight number.
        type: string
      last_name:
        description: The passenger's last name.
        type: string
      preferred_seat:
        description: The passenger's preferred seat (optional).
        type: string
    required:
    - booking_reference
    - flight_number
    - last_name
    type: object
  return_value:
    properties:
      checked_baggage:
        description: A list of checked-in baggage items.
        items:
          properties:
            bag_id:
              type: string
            weight:
              type: number
          type: object
        type: array
      request_id:
        description: A unique ID for the check-in request.
        type: string
      status:
        description: The status of the check-in request.
        enum:
        - success
        - failed
        type: string
    required:
    - request_id
    - status
    - checked_baggage
    type: object
- function: CheckIn
  kind: gather_values_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: gather_values_node
    other: {}
    prompt_id: 305b4b0d-19fe-4a2c-8f61-302a768a0b75
  parameters: {}
- function: CheckIn
  kind: verify_values_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: verify_values_node
    other: {}
    prompt_id: 83de0f2a-a64a-4619-aee4-7a3aae5f17ce
  parameters: {}
- assign: {}
  function: CheckIn
  kind: update_function_parameters_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: retrospective_plan_node
    other: {}
    prompt_id: af1af5eb-00aa-4d90-939c-4bc34194f730
  skip: []
- function: CheckIn
  kind: request_function_parameters_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: forward_plan_node
    other: {}
    prompt_id: 2fe32dfe-90e3-4a67-a4a9-c49c8df0be2d
  parameters:
  - booking_reference
- content: To check in for your flight, please provide your booking reference.
  kind: assistant
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: generation_node
    other: {}
    prompt_id: 1d7ef69f-585a-4720-835b-51bdab7c4cf6
- kind: set_next_node
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: generation_node
    other: {}
    prompt_id: 1d7ef69f-585a-4720-835b-51bdab7c4cf6
  next_node: routing_node
- content: My booking reference is GK7H3J.
  kind: user
  metadata:
    agent: ''
    id: cba9aa66-4b2c-4b85-999c-851c9e77a0ff
    node: ''
    other:
      alias: test_behavior
    prompt_id: ''
---
context:
  date: '2024-12-02'
  env_spec: /mnt/llmd/data/gontiern/catalog_items/for_open_release/train/FlyCorp
metadata:
  author: user_simulator
  author_tape_id: 2031c668-4fc3-4506-a151-95958e34a707
  error: null
  id: ca74e2b8-fd34-48ea-bd5b-7b1ec07e7539
  last_agent_tape_id: ff48a807-5415-40e8-89b0-6f0295318d77
  n_added_steps: 1
  other: {}
  parent_id: ff48a807-5415-40e8-89b0-6f0295318d77
  result: {}
  user_behavior: test_behavior
  user_secondary_behavior: default_instruction
steps:
- content: Hi, how can I help you?
  kind: assistant
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
- content: I need to update my passenger information for an upcoming flight.
  kind: user
  metadata:
    agent: ''
    id: 3229768c-a815-4257-bfaa-559af62a05d5
    node: ''
    other:
      alias: init_message_short
    prompt_id: ''
- kind: resolve_function_action
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: routing_node
    other: {}
    prompt_id: 60aa1b4d-2539-4d74-b0db-1568164780a6
  query: I need to update my passenger information for an upcoming flight.
- candidates:
  - function: AddAncillaryService
    short_description: Request to add an ancillary service to a flight booking, including
      service type and payment details. This function requires the flight booking
      ID, service type (either 'baggage' or'meal'), and payment method (either 'credit
      card' or 'cash'). According to FlyCorp's policy, only one ancillary service
      can be added per flight booking. If the service is successfully added, the function
      returns a request ID, the status of the request ('pending', 'approved', or'rejected'),
      and a list of the updated services associated with the flight booking. If the
      service is already added, the function returns an error message.
  - function: BookFlight
    short_description: Request to book a flight for a passenger, including flight
      details, passenger information, and payment details. This function requires
      the passenger's first and last name, email address, phone number, and payment
      method. The flight details include the departure and arrival airports, departure
      date, and class of service. According to FlyCorp's policies, passengers must
      be at least 18 years old to book a flight, and payment must be made using a
      valid credit card. The function returns a request ID, the status of the request
      (either 'pending', 'approved', or'rejected'), and a list of flight details.
  - function: CheckIn
    short_description: Request to check-in a passenger for a flight, including seat
      selection and baggage information. This function requires the passenger's booking
      reference, flight number, and last name as mandatory parameters. Optionally,
      the passenger can provide their preferred seat and baggage details. According
      to FlyCorp's check-in policy, online check-in is available 24 hours prior to
      the scheduled flight departure time. FlyCorp's baggage policy allows each passenger
      to check-in up to two bags, with a maximum weight of 23kg each. The function
      returns a unique request ID, the status of the check-in request (either'success'
      or 'failed'), and a list of checked-in baggage items.
  - function: ReportLostLuggage
    short_description: 'Request to report lost luggage, including flight details,
      luggage description, and contact information. This function requires the passenger''s
      name, flight number, departure date, luggage type, and contact email. The luggage
      type must be one of the following: suitcase, backpack, handbag, or other. The
      function will return a request ID, the status of the request (either ''pending'',
      ''in_progress'', or''resolved''), and a comment from the FlyCorp customer service
      team. According to FlyCorp''s policy, all lost luggage reports must be submitted
      within 24 hours of flight arrival. FlyCorp is not responsible for lost luggage
      that is not reported within this timeframe.'
  - function: RequestFlightChange
    short_description: Request to change a flight, including original flight details
      (original flight number, departure date, and departure time), new flight details
      (new flight number, new departure date, and new departure time), and reason
      for change. This request is subject to FlyCorp's flight change policy, which
      allows changes up to 24 hours prior to the original flight's scheduled departure
      time. The request will be processed based on availability and may incur additional
      fees. The response will include a unique request ID, the status of the request
      (approved, denied, or pending), and a list of updated flight segments.
  - function: RequestRefund
    short_description: 'Request for a refund for a cancelled or changed flight, including
      flight details and reason for refund. This function requires the flight number,
      original booking date, and reason for refund as mandatory parameters. The reason
      for refund must be one of the following: ''flight cancellation'',''schedule
      change'', or ''voluntary change''. FlyCorp''s refund policy states that refunds
      will be processed within 7-10 business days. The function returns a unique request
      ID, the status of the request (either ''pending'', ''approved'', or''rejected''),
      and a list of comments from the FlyCorp customer service team.'
  - function: RequestSpecialMeal
    short_description: Request for a special meal option for a passenger, including
      meal type and dietary restrictions. This function requires the passenger's booking
      reference, meal type (vegetarian, gluten-free, etc.), and dietary restrictions
      (halal, kosher, etc.). According to FlyCorp's policy, special meal requests
      must be made at least 24 hours prior to flight departure. The function will
      return a request ID, the status of the request (approved, denied, or pending),
      and a comment indicating any additional information or requirements.
  - function: RequestWheelchairAssistance
    short_description: Request for wheelchair assistance for a passenger, including
      flight details and special requirements. This function requires the passenger's
      name, flight number, and departure date as mandatory parameters. Additionally,
      it accepts optional parameters for special requirements such as escort assistance
      or Braille signage. According to FlyCorp's policy, wheelchair assistance requests
      must be made at least 48 hours prior to the scheduled flight departure time.
      The function returns a unique request ID, the status of the request (either
      'pending', 'approved', or 'denied'), and a list of assigned assistants.
  - function: UpdatePassengerInformation
    short_description: Request to update a passenger's personal information, including
      name, contact details, and loyalty program information. This function requires
      the passenger's ID, new name, email address, and phone number as mandatory parameters.
      The loyalty program information is optional. According to FlyCorp's policy,
      passengers can only update their own information, and the new email address
      must not be already in use by another passenger. The function returns a request
      ID, the status of the request (either'success' or 'failed'), and a list of updated
      loyalty programs.
  - function: UpdateSeatAssignment
    short_description: Request to update a passenger's seat assignment on a flight,
      including seat number and class of service. This function requires the passenger's
      booking reference, flight number, and new seat assignment details. According
      to FlyCorp's policies, seat assignments can only be updated up to 24 hours prior
      to the scheduled flight departure time. Additionally, FlyCorp's rules dictate
      that passengers in Basic Economy class are not eligible for seat selection.
      The function returns a request ID, the status of the request (either'success'
      or 'failed'), and a list of available seats on the flight.
  kind: function_candidates
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
- function: UpdatePassengerInformation
  kind: inspect_function_action
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: intent_discovery_node
    other: {}
    prompt_id: cbee1519-0487-4e4f-8146-956287800529
- description: Request to update a passenger's personal information, including name,
    contact details, and loyalty program information. This function requires the passenger's
    ID, new name, email address, and phone number as mandatory parameters. The loyalty
    program information is optional. According to FlyCorp's policy, passengers can
    only update their own information, and the new email address must not be already
    in use by another passenger. The function returns a request ID, the status of
    the request (either'success' or 'failed'), and a list of updated loyalty programs.
  kind: function_schema
  metadata:
    agent: ''
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: ''
    other: {}
    prompt_id: ''
  name: UpdatePassengerInformation
  parameters:
    properties:
      email:
        description: The new email address of the passenger.
        type: string
      loyalty_program:
        description: The new loyalty program information (optional).
        type: string
      new_name:
        description: The new name of the passenger.
        type: string
      passenger_id:
        description: The ID of the passenger to update.
        type: integer
      phone_number:
        description: The new phone number of the passenger.
        type: string
    required:
    - passenger_id
    - new_name
    - email
    - phone_number
    type: object
  return_value:
    properties:
      request_id:
        description: The ID of the update request.
        type: string
      status:
        description: The status of the request.
        enum:
        - success
        - failed
        type: string
      updated_loyalty_programs:
        description: A list of updated loyalty programs.
        items:
          type: string
        type: array
    required:
    - request_id
    - status
    type: object
- function: UpdatePassengerInformation
  kind: gather_values_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: gather_values_node
    other: {}
    prompt_id: 23ff68aa-6efc-407a-a03d-010beb39f5ef
  parameters: {}
- function: UpdatePassengerInformation
  kind: verify_values_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: verify_values_node
    other: {}
    prompt_id: 3f379fd4-3175-4694-88ef-5b3996833ad5
  parameters: {}
- assign: {}
  function: UpdatePassengerInformation
  kind: update_function_parameters_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: retrospective_plan_node
    other: {}
    prompt_id: 60fe0401-dfd6-480a-89e6-100d224f8b05
  skip: []
- function: UpdatePassengerInformation
  kind: request_function_parameters_thought
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: forward_plan_node
    other: {}
    prompt_id: d381132a-7ac5-426a-a362-e244c008017e
  parameters:
  - passenger_id
- content: To update your passenger information, please provide your passenger ID.
  kind: assistant
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: generation_node
    other: {}
    prompt_id: 8a56398b-0f8f-4f9a-af87-baedd32cb0db
- kind: set_next_node
  metadata:
    agent: teacher_formfiller
    id: 36ffb824-0ec7-4037-80b4-ebb9ddf106fb
    node: generation_node
    other: {}
    prompt_id: 8a56398b-0f8f-4f9a-af87-baedd32cb0db
  next_node: routing_node
- content: My passenger ID is ZYX9876.
  kind: user
  metadata:
    agent: ''
    id: 81b75b2c-66c5-40f2-943c-720dce3c7e64
    node: ''
    other:
      alias: test_behavior
    prompt_id: ''
